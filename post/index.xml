<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Yida Wang</title>
    <link>https://wangyida.github.io/post/</link>
    <description>Recent content in Posts on Yida Wang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018 Yida Wang</copyright>
    <lastBuildDate>Mon, 02 Jan 2017 00:00:00 +0100</lastBuildDate>
    
	<atom:link href="https://wangyida.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Modification for MASK-RCNN for Latent Space</title>
      <link>https://wangyida.github.io/post/mrcnn_latent/</link>
      <pubDate>Wed, 15 Aug 2018 00:00:00 +0200</pubDate>
      
      <guid>https://wangyida.github.io/post/mrcnn_latent/</guid>
      <description> Examples python3 obj_detect_yida.py \ -num_class 90 \ -input_file /media/wangyida/YEEEEDA/videos/1.mp4 \ -output_file /media/wangyida/YEEEEDA/videos/1_result.mp4 \ -model_name faster_rcnn_nas_coco \ -path_ckpt frozen_inference_graph.pb \ -path_label mscoco_label_map.pbtxt     </description>
    </item>
    
    <item>
      <title>Voxel Space Generative Model</title>
      <link>https://wangyida.github.io/post/3d_completion/</link>
      <pubDate>Fri, 09 Mar 2018 00:00:00 +0100</pubDate>
      
      <guid>https://wangyida.github.io/post/3d_completion/</guid>
      <description> Completion from lines to full shapes    Original Completion                                              </description>
    </item>
    
    <item>
      <title>The trip for Iceland</title>
      <link>https://wangyida.github.io/post/trip-iceland/</link>
      <pubDate>Mon, 18 Dec 2017 00:00:00 +0100</pubDate>
      
      <guid>https://wangyida.github.io/post/trip-iceland/</guid>
      <description>Overall routine    round trip road condition          Hotels    12&amp;frasl;20 - 12&amp;frasl;22 Apartment K 12&amp;frasl;22 - 12&amp;frasl;23 Seljakjör 12&amp;frasl;23 - 12&amp;frasl;24 Guesthouse Drangshlid              12&amp;frasl;24 - 12&amp;frasl;25 Kirkjuvegur Vestmannaeyjabær 12&amp;frasl;25 - 12&amp;frasl;27 Höfn HI Hostel 12&amp;frasl;27 - 12&amp;frasl;28 Akurholt Guesthouse              12&amp;frasl;28 - 12&amp;frasl;29 West Park Guesthouse 12&amp;frasl;29 - 12&amp;frasl;30 Arni&amp;rsquo;s Place 12&amp;frasl;30 - 12&amp;frasl;31 Bjorkinn Apartments &amp;amp; Rooms           Sites Blue Lagoon Iceland</description>
    </item>
    
    <item>
      <title>Image Processing</title>
      <link>https://wangyida.github.io/post/image/</link>
      <pubDate>Wed, 01 Nov 2017 00:00:00 +0100</pubDate>
      
      <guid>https://wangyida.github.io/post/image/</guid>
      <description>Trim images in batches Images Suppose that there are images in tmp folder, you can remove all margins without any effective pixel by executing:
find tmp -name &#39;scatter*.png&#39; -print0 | xargs -0 -I {} convert {} -trim {}  Option print0 for find is mean to print the full file name on the standard output, followed by a null character (instead of the newline character that -print uses).
This allows file names that contain newlines or other types of white space to be correctly interpreted by programs that process the find output.</description>
    </item>
    
    <item>
      <title>Shell Tips</title>
      <link>https://wangyida.github.io/post/shell_tips/</link>
      <pubDate>Wed, 01 Nov 2017 00:00:00 +0100</pubDate>
      
      <guid>https://wangyida.github.io/post/shell_tips/</guid>
      <description> File Transmitting scp -P 10639 /Users/yidawang/Documents/gitfarm/cluster-vae/list_attr_celeba.csv user@557803.iask.in:/home/user/Desktop/  rsync -avz --progress -e &#39;ssh -p 10639&#39; /Users/yidawang/Downloads/img_align_celeba.zip user@557803.iask.in:/home/user/Desktop/  </description>
    </item>
    
    <item>
      <title>Video Processing</title>
      <link>https://wangyida.github.io/post/video/</link>
      <pubDate>Wed, 01 Nov 2017 00:00:00 +0100</pubDate>
      
      <guid>https://wangyida.github.io/post/video/</guid>
      <description>Concatenate images to a video Firstly, we should rename files in the form foo1, foo2, ..., foo1300, ..., fooN to form foo00001, foo00002, ..., foo01300, ..., fooN by:
for (( i=0; i&amp;lt;2000; i++ )); do printf -v n &amp;quot;%04d&amp;quot; $i; mv &amp;quot;$i.png&amp;quot; &amp;quot;$n.png&amp;quot;; done;  Then use ffmpeg for video producing:
ffmpeg -framerate 50 -pattern_type glob -i &amp;quot;*.png&amp;quot; -s:v 640x480 -c:v libx264 -profile:v high -crf 20 -pix_fmt yuv420p hand_pose.mp4  Video compressing Given a video in format like .</description>
    </item>
    
    <item>
      <title>labelme: Image Annotation Tool with Python</title>
      <link>https://wangyida.github.io/post/labelme_annotation/</link>
      <pubDate>Sun, 29 Oct 2017 00:00:00 +0200</pubDate>
      
      <guid>https://wangyida.github.io/post/labelme_annotation/</guid>
      <description>Labelme is a graphical image annotation tool inspired by http://labelme.csail.mit.edu.
It is written in Python and uses Qt for its graphical interface.
Requirements  Ubuntu / macOS / Windows Python2 / Python3 PyQt4 / PyQt5  Installation There are options:
 Platform agonistic installation: Anaconda, Docker Platform specific installation: Ubuntu, macOS  Anaconda
You need install Anaconda, then run below:
conda create --name=labelme python=2.7 source activate labelme conda install pyqt pip install labelme  Docker</description>
    </item>
    
    <item>
      <title>New Post in Blogdown</title>
      <link>https://wangyida.github.io/post/rmd/</link>
      <pubDate>Tue, 22 Aug 2017 23:41:14 -0500</pubDate>
      
      <guid>https://wangyida.github.io/post/rmd/</guid>
      <description>summary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 You can also embed plots, for example:
new example
library(ggplot2) ggplot(diamonds, aes(x=carat, y=price, color=clarity)) + geom_point() </description>
    </item>
    
    <item>
      <title>Customizing the homepage with widgets</title>
      <link>https://wangyida.github.io/post/widgets/</link>
      <pubDate>Tue, 19 Apr 2016 00:00:00 +0200</pubDate>
      
      <guid>https://wangyida.github.io/post/widgets/</guid>
      <description>Homepage widgets display as sections on the homepage. They can be enabled/disabled and configured as desired. Academic has the following widgets available to use:
 About/biography Selected publications Recent publications Recent news/blog posts Projects Selected talks Recent talks Contact Tag cloud Hero (introduction) Custom widget (demonstrated with the teaching example)  The example site that you copied to create your site uses all the different types of widget (except talks), so you can generally just delete the widgets you don&amp;rsquo;t need and customize the parameters of the widgets you wish to keep.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://wangyida.github.io/post/inspect_data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wangyida.github.io/post/inspect_data/</guid>
      <description>Mask R-CNN - 检查训练数据 检查并可视化数据加载和预处理代码。
import os import sys import itertools import math import logging import json import re import random from collections import OrderedDict import numpy as np import matplotlib import matplotlib.pyplot as plt import matplotlib.patches as patches import matplotlib.lines as lines from matplotlib.patches import Polygon import utils import visualize from visualize import display_images import model as modellib from model import log %matplotlib inline ROOT_DIR = os.getcwd()  Using TensorFlow backend.</description>
    </item>
    
  </channel>
</rss>